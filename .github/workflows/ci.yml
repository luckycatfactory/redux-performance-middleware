jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Build redux-performance-middleware
        run: yarn build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: redux-performance-middleware-dist
          path: dist
  commitlint:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v1
  format:
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: ESLint
        run: yarn eslint:check
      - name: Prettier
        run: yarn prettier:check
    runs-on: ubuntu-latest
  release:
    # if: github.ref == 'refs/heads/master'
    needs: ['build', 'commitlint', 'format', 'test']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Download redux-performance-middleware
        uses: actions/download-artifact@v1
        with:
          name: redux-performance-middleware-dist
      - name: Move redux-performance-middleware dist
        shell: bash
        run: |
          mv redux-performance-middleware-dist dist
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      # - env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   name: Release
      #   run: yarn semantic-release
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: nvm
        name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Install dependencies
        run: yarn --offline --frozen-lockfile
      - name: Test
        run: yarn test:ci
name: Continuous Integration
on: [push]
